services:
  frontend:
    build:
      context: ./frontend
      dockerfile: DockerfileFrontendIEH
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true # Activa polling para asegurar detecciÃ³n de cambios en Docker
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: DockerfileBackendIEH
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - database
    command: >
      sh -c "
      composer install &&
      composer show doctrine/dbal &&
      php -S 0.0.0.0:8000 -t public"
    networks:
      - app-network

  database:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: IEH_BD
      MYSQL_USER: alumnoDAW
      MYSQL_PASSWORD: passIEH
    volumes:
      - ./database/IEH.sql:/docker-entrypoint-initdb.d/IEH.sql
      - database_data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: database
      PMA_USER: alumnoDAW
      PMA_PASSWORD: passIEH
    depends_on:
      - database
    networks:
      - app-network

  web:
    build:
      context: ./web
      dockerfile: DockerfileWeb
    ports:
      - "81:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  database_data:
